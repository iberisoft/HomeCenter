@inherits DeviceBase

<DeviceTitle Title="@Name" ImageSource="images/devices/MijiaGateway.jpg" />
<Text Alignment="TextAlignment.Center">
    <FigureImage Source="images/preferences-system-brightness-lock-icon.png" />
    <RangeEdit Min="1" Max="100" Value="brightness" ValueChanged="ChangeBrightness" />
</Text>
<Text Alignment="TextAlignment.Center">
    <FigureImage Source="images/color-pencils-icon.png" />
    <RangeEdit Min="0" Max="colorPalette.Count - 1" Value="colorIndex" ValueChanged="ChangeColor" />
</Text>
@if (status)
{
    var style = "background: #" + colorPalette[colorIndex];
    <Blazorise.Text Alignment="TextAlignment.Center" Style="@style">
        <b>ON</b>
    </Blazorise.Text>
}
else
{
    <Blazorise.Text Alignment="TextAlignment.Center">
        OFF
    </Blazorise.Text>
}
<Text Alignment="TextAlignment.Center">
    <Button Color="Color.Danger" IsOutline="true" Margin="Margin.Is1.OnY" Clicked="ToggleLight">Toggle</Button>
</Text>
<Text Alignment="TextAlignment.Center">
    <FigureImage Source="images/music-library-icon.png" />
    <Dropdown>
        <DropdownToggle Color="Color.Primary" IsOutline="true">Play</DropdownToggle>
        <DropdownMenu>
            @for (var i = 1; i <= 8; ++i)
            {
                var index = i;
                <Button Clicked="() => Device.StartPlayMusic(index)">#@index</Button>
            }
            @for (var i = 10; i <= 13; ++i)
            {
                var index = i;
                <Button Clicked="() => Device.StartPlayMusic(index)">#@index</Button>
            }
            @for (var i = 20; i <= 29; ++i)
            {
                var index = i;
                <Button Clicked="() => Device.StartPlayMusic(index)">#@index</Button>
            }
        </DropdownMenu>
    </Dropdown>
    <Button Color="Color.Secondary" IsOutline="true" Clicked="() => Device.StopPlayMusic()">Stop</Button>
</Text>

@code {
    [Parameter]
    public MiHomeLib.Devices.Gateway Device { get; set; }

    bool status;
    int brightness = 100;
    ColorPalette colorPalette = new ColorPalette();
    int colorIndex;

    private void ChangeBrightness(int value)
    {
        brightness = value;
        ChangeLight();
    }

    private void ChangeColor(int value)
    {
        colorIndex = value;
        ChangeLight();
    }

    private void ChangeLight()
    {
        if (status)
        {
            var color = colorPalette[colorIndex];
            Device.EnableLight((byte)color.R, (byte)color.G, (byte)color.B, brightness);
        }
        else
        {
            Device.DisableLight();
        }
    }

    private void ToggleLight()
    {
        status = !status;
        ChangeLight();
    }
}
