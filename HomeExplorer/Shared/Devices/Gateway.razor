@inherits DeviceBase

<DeviceTitle Title="@Name" ImageSource="images/devices/MijiaGateway.jpg" />
<Row>
    <Column>
        <FigureImage Source="images/preferences-system-brightness-lock-icon.png" />
        <Slider TValue="int" Min="1" Max="100" Value="brightness" ValueChanged="ChangeBrightness" />
    </Column>
</Row>
<Row>
    <Column>
        <FigureImage Source="images/color-pencils-icon.png" />
        <Slider TValue="int" Min="0" Max="colorPalette.Count - 1" Value="colorIndex" ValueChanged="ChangeColor" />
    </Column>
</Row>
@if (status)
{
    var style = "background: #" + colorPalette[colorIndex];
    <Div TextWeight="TextWeight.Bold" Style="@style">
        ON
    </Div>
}
else
{
    <Div>
        OFF
    </Div>
}
<Button Color="Color.Danger" Outline="true" Margin="Margin.Is1.OnY" Clicked="ToggleLight">Toggle</Button>
<Row>
    <Column>
        <FigureImage Source="images/music-library-icon.png" />
        <Dropdown>
            <DropdownToggle Color="Color.Primary" Outline="true">Play</DropdownToggle>
            <DropdownMenu>
                @for (var i = 1; i <= 8; ++i)
                {
                    var index = i;
                    <Button Clicked="() => Device.StartPlayMusic(index)">#@index</Button>
                }
                @for (var i = 10; i <= 13; ++i)
                {
                    var index = i;
                    <Button Clicked="() => Device.StartPlayMusic(index)">#@index</Button>
                }
                @for (var i = 20; i <= 29; ++i)
                {
                    var index = i;
                    <Button Clicked="() => Device.StartPlayMusic(index)">#@index</Button>
                }
            </DropdownMenu>
        </Dropdown>
        <Button Color="Color.Secondary" Outline="true" Clicked="() => Device.StopPlayMusic()">Stop</Button>
    </Column>
</Row>

@code {
    [Parameter]
    public MiHomeLib.Devices.Gateway Device { get; set; }

    bool status;
    int brightness = 100;
    readonly ColorPalette colorPalette = new();
    int colorIndex;

    private void ChangeBrightness(int value)
    {
        brightness = value;
        ChangeLight();
    }

    private void ChangeColor(int value)
    {
        colorIndex = value;
        ChangeLight();
    }

    private void ChangeLight()
    {
        if (status)
        {
            var color = colorPalette[colorIndex];
            Device.EnableLight((byte)color.R, (byte)color.G, (byte)color.B, brightness);
        }
        else
        {
            Device.DisableLight();
        }
    }

    private void ToggleLight()
    {
        status = !status;
        ChangeLight();
    }
}
