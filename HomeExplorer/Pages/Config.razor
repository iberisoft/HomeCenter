@page "/config"

@using System.IO

@inherits PageBase
@inject AutomationService AutomationService
@inject ConfigService ConfigService

<Heading Size="HeadingSize.Is1">Configuration @(ConfigService.IsModified ? "*" : "")</Heading>

@if (AutomationService.IsBusy)
{
    <Paragraph>Pending...</Paragraph>
    return;
}

<Button Color="Color.Primary" Margin="Margin.Is1.FromBottom" Clicked="ApplyConfig">Apply</Button>

<Tabs SelectedTab="hardware.yml">
    <Items>
        @foreach (var fileName in fileNames)
        {
            <Tab Name="@fileName">@GetTabTitle(fileName)</Tab>
        }
    </Items>
    <Content>
        @foreach (var fileName in fileNames)
        {
            <TabPanel Name="@fileName">
                <ConfigFileEditor FileName="@fileName" FileSaved="UpdateState" />
            </TabPanel>
        }
    </Content>
</Tabs>

@code {
    List<string> fileNames;

    protected override void OnInitialized()
    {
        fileNames = ConfigService.GetConfigFiles("*.yml").ToList();
    }

    private static string GetTabTitle(string fileName)
    {
        fileName = fileName[..fileName.IndexOf('.')];
        return string.Join(" - ", fileName.Split(Path.DirectorySeparatorChar).Select(name => char.ToUpper(name[0]) + name[1..]));
    }

    private async Task ApplyConfig()
    {
        if (ConfigService.IsModified)
        {
            if (AutomationService.IsStarted)
            {
                await AutomationService.StopAsync();
                await AutomationService.StartAsync();
            }
            ConfigService.IsModified = false;
        }
    }
}
