@page "/"

@inherits PageBase
@inject AutomationService AutomationService
@inject ConfigService ConfigService
@inject TextSink TextSink

<Heading Size="HeadingSize.Is1">Service</Heading>

@if (AutomationService.IsBusy)
{
    <Paragraph>Pending...</Paragraph>
    return;
}

@if (!AutomationService.IsStarted)
{
    <Button Color="Color.Primary" Margin="Margin.Is1.FromBottom" Clicked="StartAutomation">Start</Button>
}
else
{
    <Button Color="Color.Primary" Margin="Margin.Is1.FromBottom" Clicked="StopAutomation">Stop</Button>
}

<MemoEdit Rows="25" Text="@logText" ReadOnly="true" />

@code {
    string logText;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        logText = TextSink.Text;
        TextSink.TextChanged += LogTextChanged;
    }

    public override void Dispose()
    {
        base.Dispose();

        TextSink.TextChanged -= LogTextChanged;
    }

    private async Task StartAutomation()
    {
        await AutomationService.StartAsync();
        ConfigService.IsModified = false;
    }

    private async Task StopAutomation()
    {
        await AutomationService.StopAsync();
    }

    private void LogTextChanged(object _, EventArgs e)
    {
        logText = TextSink.Text;
        UpdateState();
    }
}
